/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import org.apache.ibatis.session.SqlSession;

import dialog.calendarFrame;
import factory.Factory;
import vo.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.TableRowSorter;

public class B_card3 extends javax.swing.JPanel {
	List<VacationVO> list;
	int count;
	private Object[] rowData;
	
    public B_card3() {
        initComponents();
        totalVacation();
        selectListCount();
        //viewDate(); 
    }

    public void selectListCount() {
    	SqlSession ss = Factory.getFactory().openSession();
    	count = ss.selectOne("vacation.selectCount", Login.mvo.getDeptno());
    	B_3_tf_outstanding.setText(String.valueOf(count));
    	if(ss!=null)
    		ss.close();

		B_3_tf_outstanding.repaint();
    }
    /*
    // 날짜 textfield에 입력값 받아오기
    private void viewDate() { 
    	int vacationCount = A_card1.evo.getV_count();
    	B_3_tf_outstanding.setText(String.valueOf(count));
        B_3_tf_startdate.getText().trim();
        B_3_tf_enddate.getText().trim();
    }
    */
    // 전체 테이블 조회
    public void totalVacation() {
		SqlSession ss = Factory.getFactory().openSession();
		
	    list = ss.selectList("vacation.vacation_table", Login.mvo.getDeptno());
		
	    vacationTable();
	    if(ss!=null)
    		ss.close();
	}
    
    // 전체 테이블을 조회하기 위해 배열 생성 후 값 넣기
	private void vacationTable() { 
		SqlSession ss = Factory.getFactory().openSession();
    
		String[] c_name = {"no","신청일","요청자","근태유형","근태시작일","근태종료일","요청사유","승인여부"};
		
		String[][] data = new String[list.size()][c_name.length];
		
		for(int i=0; i<list.size(); i++) {
			//list로부터 EmpVO를 하나 얻어낸다.
			VacationVO vvo = list.get(i);
			
			String empno = String.valueOf(vvo.getEmpno());
			EmpVO evo = ss.selectOne("emp.searchEmp", String.valueOf(empno));
			String ename = evo.getEname();
			
			//v_date가 null이면 오류발생 (해결방법 : v_date update)
			data[i][0] = String.valueOf(vvo.getIdx());//인덱스
			data[i][1] = vvo.getV_date().substring(0,10);//신청일
			data[i][2] = ename;//이름    		
			data[i][3] = vvo.getV_cate();//근태유형
			data[i][4] = vvo.getStart_date().substring(0,10);//시작날짜
			data[i][5] = vvo.getEnd_date().substring(0,10);//끝날짜
			data[i][6] = vvo.getV_content();//요청사유
			if (vvo.getV_check() == 0) {
		    	 data[i][7] = "미승인";
		    }else if (vvo.getV_check() == 1) {
		        data[i][7] = "승인"; 
		    }else if (vvo.getV_check() == 2) {
				data[i][7] = "반려"; 
		    }
		}//for의 끝
		
		if(ss != null)
		       ss.close();
		
		//테이블 모델 생성
		DefaultTableModel model = new DefaultTableModel(data, c_name);
		B_3_tb_tableRequest.setModel(model);
		DefaultRowSorter sorter = new TableRowSorter<DefaultTableModel>(model);
		B_3_tb_tableRequest.setRowSorter(sorter);
	}
	
	//검색하는 기능 만들기
	 private void searchVacation() {
		 
		 SqlSession ss1 = Factory.getFactory().openSession();
	    	
		 	//콤보박스 index값 받아오기
			int idx = B_3_cb_name.getSelectedIndex();
	    	
	    	Map<String,String> map = new HashMap<String, String>();
	    	////"신청일", "요청자", "근태유형"
	    	String key = null;
	    	switch(idx) {
	    	case 0:
	    		key = "v_date";//신청일
	    		break;
	    	case 1:
	    		key = "ename";//요청자
	    		break;
	    	case 2:
	    		key = "v_cate";//근태유형
	    		break;
	    	}//switch문 끝

	    	//textfield 입력 값 받아오기
	    	String str = B_3_tf_inputName.getText().trim();
			if(str.isEmpty())//검색어 확인
				str = null;
			
			map.put(key, str); //검색 항목
			
			map.put("deptno", String.valueOf(Login.mvo.getDeptno()));
			
			String start_day = B_3_tf_startdate.getText().trim();
			if(start_day.isEmpty())//검색어 확인
				start_day = null;
			
			map.put("start_date", start_day); //조회 날짜
			
			String end_day = B_3_tf_enddate.getText().trim();
			if(end_day.isEmpty())//검색어 확인
				end_day = null;
			
			map.put("end_date", end_day); //조회 날짜
			
	    	SqlSession ss = Factory.getFactory().openSession();
	    	list = ss.selectList("vacation.lookforVacation", map);
	    	
	    	vacationTable();
	    	
	    	if(ss!=null)
	    		ss.close();
	}	
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_card3 = new javax.swing.JPanel();
        B_3_Panel1 = new javax.swing.JPanel();
        commanange4 = new javax.swing.JPanel();
        B_3_Label1 = new javax.swing.JLabel();
        B_3_Panel2 = new javax.swing.JPanel();
        B_3_Label3 = new javax.swing.JLabel();
        javax.swing.JPanel B_3_jp_startdate = new javax.swing.JPanel();
        B_3_tf_startdate = new javax.swing.JTextField();
        B_3_bt_startcalendar = new javax.swing.JButton();
        B_3_jp_enddate = new javax.swing.JPanel();
        B_3_tf_enddate = new javax.swing.JTextField();
        B_3_bt_endcalendar = new javax.swing.JButton();
        B_3_bt_approve = new javax.swing.JButton();
        B_3_bt_return = new javax.swing.JButton();
        B_3_scrollPane = new javax.swing.JScrollPane();
        B_3_tb_tableRequest = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(1100, 700));
        setMinimumSize(new java.awt.Dimension(1100, 700));
        setPreferredSize(new java.awt.Dimension(1100, 700));

        B_card3.setMaximumSize(new java.awt.Dimension(1100, 700));
        B_card3.setMinimumSize(new java.awt.Dimension(1100, 700));
        B_card3.setPreferredSize(new java.awt.Dimension(1100, 700));

        B_3_Panel1.setBackground(new java.awt.Color(215, 225, 234));
        B_3_Panel1.setMaximumSize(new java.awt.Dimension(1100, 700));
        B_3_Panel1.setMinimumSize(new java.awt.Dimension(1100, 700));
        B_3_Panel1.setPreferredSize(new java.awt.Dimension(1100, 700));

        commanange4.setBackground(new java.awt.Color(52, 73, 102));

        B_3_Label1.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        B_3_Label1.setForeground(new java.awt.Color(255, 255, 255));
        B_3_Label1.setText("부서 내 근태 요청 관리");

        javax.swing.GroupLayout commanange4Layout = new javax.swing.GroupLayout(commanange4);
        commanange4Layout.setHorizontalGroup(
        	commanange4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(commanange4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(B_3_Label1)
        			.addContainerGap(939, Short.MAX_VALUE))
        );
        commanange4Layout.setVerticalGroup(
        	commanange4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(commanange4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(B_3_Label1)
        			.addContainerGap(14, Short.MAX_VALUE))
        );
        commanange4.setLayout(commanange4Layout);

        B_3_Panel2.setBackground(new java.awt.Color(175, 209, 235));

        B_3_Label3.setText("~");

        B_3_jp_startdate.setBackground(new java.awt.Color(255, 255, 255));

        B_3_tf_startdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        B_3_bt_startcalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/celendar_1.png"))); // NOI18N
        B_3_bt_startcalendar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        B_3_bt_startcalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_3_bt_startcalendarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout B_3_jp_startdateLayout = new javax.swing.GroupLayout(B_3_jp_startdate);
        B_3_jp_startdate.setLayout(B_3_jp_startdateLayout);
        B_3_jp_startdateLayout.setHorizontalGroup(
            B_3_jp_startdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B_3_jp_startdateLayout.createSequentialGroup()
                .addComponent(B_3_tf_startdate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(B_3_bt_startcalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        B_3_jp_startdateLayout.setVerticalGroup(
            B_3_jp_startdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B_3_jp_startdateLayout.createSequentialGroup()
                .addGroup(B_3_jp_startdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(B_3_tf_startdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(B_3_bt_startcalendar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        B_3_jp_enddate.setBackground(new java.awt.Color(255, 255, 255));

        B_3_tf_enddate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        B_3_bt_endcalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/celendar_1.png"))); // NOI18N
        B_3_bt_endcalendar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        B_3_bt_endcalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_3_bt_endcalendarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout B_3_jp_enddateLayout = new javax.swing.GroupLayout(B_3_jp_enddate);
        B_3_jp_enddate.setLayout(B_3_jp_enddateLayout);
        B_3_jp_enddateLayout.setHorizontalGroup(
            B_3_jp_enddateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B_3_jp_enddateLayout.createSequentialGroup()
                .addComponent(B_3_tf_enddate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(B_3_bt_endcalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        B_3_jp_enddateLayout.setVerticalGroup(
            B_3_jp_enddateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B_3_jp_enddateLayout.createSequentialGroup()
                .addGroup(B_3_jp_enddateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(B_3_tf_enddate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_3_bt_endcalendar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        B_3_cb_name = new javax.swing.JComboBox<>();
        
                B_3_cb_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "신청일", "요청자", "근태유형" }));
        B_3_tf_inputName = new javax.swing.JTextField();
        B_3_bt_search = new javax.swing.JButton();
        
                B_3_bt_search.setText("검색");
                B_3_bt_search.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        B_3_bt_searchActionPerformed(evt);
                    }
                });
        
        JLabel lblNewLabel = new JLabel("시작 날짜");
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        
        JLabel lblNewLabel_1 = new JLabel("끝 날짜");
        lblNewLabel_1.setHorizontalAlignment(SwingConstants.CENTER);

        javax.swing.GroupLayout B_3_Panel2Layout = new javax.swing.GroupLayout(B_3_Panel2);
        B_3_Panel2Layout.setHorizontalGroup(
        	B_3_Panel2Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(B_3_Panel2Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(B_3_jp_startdate, GroupLayout.PREFERRED_SIZE, 142, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(B_3_Label3)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(lblNewLabel_1, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(B_3_jp_enddate, GroupLayout.PREFERRED_SIZE, 142, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(B_3_cb_name, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(B_3_tf_inputName, GroupLayout.PREFERRED_SIZE, 152, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(B_3_bt_search, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(282, Short.MAX_VALUE))
        );
        B_3_Panel2Layout.setVerticalGroup(
        	B_3_Panel2Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(B_3_Panel2Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(B_3_Panel2Layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(lblNewLabel_1, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        				.addComponent(B_3_jp_enddate, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addGroup(B_3_Panel2Layout.createSequentialGroup()
        					.addGroup(B_3_Panel2Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(B_3_cb_name, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(B_3_tf_inputName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(B_3_bt_search))
        					.addGap(0, 2, Short.MAX_VALUE))
        				.addComponent(B_3_Label3, GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        				.addComponent(lblNewLabel, GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        				.addComponent(B_3_jp_startdate, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        			.addContainerGap())
        );
        B_3_Panel2.setLayout(B_3_Panel2Layout);

        B_3_bt_approve.setText("승인");
        B_3_bt_approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_3_bt_approveActionPerformed(evt);
            }
        });

        B_3_bt_return.setText("반려");
        B_3_bt_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_3_bt_returnActionPerformed(evt);
            }
        });

        B_3_tb_tableRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NO", "신청일", "요청자", "소속", "휴가 종류", "시작날짜", "끝날짜", "요청사유", "승인여부"
            }
        ));
        B_3_scrollPane.setViewportView(B_3_tb_tableRequest);
        B_3_Label2 = new javax.swing.JLabel();
        
                B_3_Label2.setBackground(new java.awt.Color(255, 255, 255));
                B_3_Label2.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
                B_3_Label2.setText("미처리");
        B_3_tf_outstanding = new javax.swing.JTextField();

        javax.swing.GroupLayout B_3_Panel1Layout = new javax.swing.GroupLayout(B_3_Panel1);
        B_3_Panel1Layout.setHorizontalGroup(
        	B_3_Panel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, B_3_Panel1Layout.createSequentialGroup()
        			.addContainerGap(858, Short.MAX_VALUE)
        			.addComponent(B_3_Label2, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(B_3_tf_outstanding, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(27)
        			.addComponent(B_3_bt_approve)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(B_3_bt_return)
        			.addContainerGap())
        		.addComponent(commanange4, GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        		.addComponent(B_3_Panel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        		.addGroup(B_3_Panel1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(B_3_scrollPane, GroupLayout.PREFERRED_SIZE, 1076, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        B_3_Panel1Layout.setVerticalGroup(
        	B_3_Panel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(B_3_Panel1Layout.createSequentialGroup()
        			.addComponent(commanange4, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(B_3_Panel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(B_3_Panel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(B_3_bt_return, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(B_3_bt_approve, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
        				.addComponent(B_3_tf_outstanding, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(B_3_Label2))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(B_3_scrollPane, GroupLayout.PREFERRED_SIZE, 525, GroupLayout.PREFERRED_SIZE)
        			.addGap(22))
        );
        B_3_Panel1.setLayout(B_3_Panel1Layout);

        javax.swing.GroupLayout B_card3Layout = new javax.swing.GroupLayout(B_card3);
        B_card3.setLayout(B_card3Layout);
        B_card3Layout.setHorizontalGroup(
            B_card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(B_card3Layout.createSequentialGroup()
                .addComponent(B_3_Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        B_card3Layout.setVerticalGroup(
            B_card3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, B_card3Layout.createSequentialGroup()
                .addComponent(B_3_Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(B_card3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(B_card3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void B_3_bt_startcalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_3_bt_startcalendarActionPerformed
    	new calendarFrame(B_3_tf_startdate);
    }//GEN-LAST:event_B_3_bt_startcalendarActionPerformed

    private void B_3_bt_endcalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_3_bt_endcalendarActionPerformed
    	new calendarFrame(B_3_tf_enddate);
    }//GEN-LAST:event_B_3_bt_endcalendarActionPerformed

    private void B_3_bt_approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_3_bt_approveActionPerformed

    	SqlSession ss = Factory.getFactory().openSession();
		int row = B_3_tb_tableRequest.getSelectedRow();
		if( row != -1) {
			String idx = (String)B_3_tb_tableRequest.getValueAt(row, 0);

	        Map<String, String> map = new HashMap<>(); // Integer로 바로 변환

	        map.put("idx", idx);

	        int cnt = ss.update("vacation.update_yes", map);
	        
	        if(cnt>0) {
	        	map.put("ename", (String)B_3_tb_tableRequest.getValueAt(row, 2));
	        	int cnt2 = ss.update("emp.countDown", map);
	        	if(cnt2>0) {
					int a = JOptionPane.showConfirmDialog(B_card3, "승인 하시겠습니까?", "승인 완료",
							JOptionPane.YES_NO_OPTION);
					if(a == JOptionPane.YES_OPTION) {
						ss.commit();
					} else {
						// 아니오 선택 시 롤백 이후 종료
						ss.rollback();
						return;
					}
	        	}
	        	else {
	        		JOptionPane.showMessageDialog(B_card3, "휴가를 사용할 수 없습니다.");
		        	ss.rollback();
	        	}
	        }
	        //휴가개수 까야함countDown
	        else {
	        	JOptionPane.showMessageDialog(B_card3, "이미 처리 되었습니다");
	        	ss.rollback();
	        } 
	        totalVacation();
		}

		selectListCount();

        if (ss != null)
            ss.close();
       // }
    }//GEN-LAST:event_B_3_bt_approveActionPerformed

    private void B_3_bt_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_3_bt_returnActionPerformed
    	
    	SqlSession ss = Factory.getFactory().openSession();
    	
    	int row = B_3_tb_tableRequest.getSelectedRow();
    	if( row != -1) {
		String idx = (String)B_3_tb_tableRequest.getValueAt(row, 0);
        // 여기서부터는 idx 값을 사용하여 데이터베이스 작업을 수행하는 코드입니다.

        Map<String, String> map = new HashMap<>(); // Integer로 바로 변환
        map.put("idx", idx);
        int cnt = ss.update("vacation.update_no", map);


        if( cnt > 0) {
			int a = JOptionPane.showConfirmDialog(B_card3, "반려 하시겠습니까??", "반려 성공",
					JOptionPane.YES_NO_OPTION);
			if(a == JOptionPane.YES_OPTION) {
				ss.commit();
			} else {
				// 아니오 선택 시 롤백 이후 종료
				ss.rollback();
				return;
			}
        } else {
        	JOptionPane.showMessageDialog(B_card3, "이미 처리 되었습니다");
        	ss.rollback();
        }
        	totalVacation();
        }

		selectListCount();

        if (ss != null)
            ss.close();
    }//GEN-LAST:event_B_3_bt_returnActionPerformed

    private void B_3_bt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_3_bt_searchActionPerformed
    	searchVacation();
    }//GEN-LAST:event_B_3_bt_searchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel B_3_Label1;
    private javax.swing.JLabel B_3_Label2;
    private javax.swing.JLabel B_3_Label3;
    private javax.swing.JPanel B_3_Panel1;
    private javax.swing.JPanel B_3_Panel2;
    private javax.swing.JButton B_3_bt_approve;
    private javax.swing.JButton B_3_bt_endcalendar;
    private javax.swing.JButton B_3_bt_return;
    private javax.swing.JButton B_3_bt_search;
    private javax.swing.JButton B_3_bt_startcalendar;
    private javax.swing.JComboBox<String> B_3_cb_name;
    private javax.swing.JPanel B_3_jp_enddate;
    private javax.swing.JScrollPane B_3_scrollPane;
    private javax.swing.JTable B_3_tb_tableRequest;
    private javax.swing.JTextField B_3_tf_enddate;
    private javax.swing.JTextField B_3_tf_inputName;
    private javax.swing.JTextField B_3_tf_outstanding;
    private javax.swing.JTextField B_3_tf_startdate;
    private javax.swing.JPanel B_card3;
    private javax.swing.JPanel commanange4;
}
